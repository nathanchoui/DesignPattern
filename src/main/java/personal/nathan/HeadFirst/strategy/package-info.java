/**
 * Created by za-zhangwei002 on 2019/1/21.
 */
package personal.nathan.HeadFirst.strategy;
/**
 *  鸭子模型，主要用到了策略模式，以及一些设计原则。
 *
 *  fly和quack，可以看成是算法族，实现类是算法实现。
 *
 *  duck依赖了FlyBehavior和QuackBehavior，没有直接依赖实现类，这样可以避免因为依赖类的实现改动而改变。
 *  OO 原则
 *  1、封装变化
 *  2、多用组合，少用继承
 *  3、针对接口编程，不针对实现编程。
 *
 *  在本实例中的应用：
 *  1、fly和quack是可变化的部分，所以单独拿出来，抽象成接口。
 *  2、duck用组合的方式拥有了fly和quack的能力。
 *  3、duck依赖了接口，而不是依赖了具体某个实现，如果实现修改或者新增实现，对于duck来说无需改动代码。
 *
 *
 *  策略模式：
 *  定义算法族，分别封装起来，让它们之间相互替换，此模式让算法的变化独立于使用算法的客户。
 *
 */
